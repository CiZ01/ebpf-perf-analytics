/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __XDP_SUM_KERN_SKEL_H__
#define __XDP_SUM_KERN_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct xdp_sum_kern {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *output;
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *xdp_sum_func;
	} progs;
	struct {
		struct bpf_link *xdp_sum_func;
	} links;

#ifdef __cplusplus
	static inline struct xdp_sum_kern *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct xdp_sum_kern *open_and_load();
	static inline int load(struct xdp_sum_kern *skel);
	static inline int attach(struct xdp_sum_kern *skel);
	static inline void detach(struct xdp_sum_kern *skel);
	static inline void destroy(struct xdp_sum_kern *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
xdp_sum_kern__destroy(struct xdp_sum_kern *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
xdp_sum_kern__create_skeleton(struct xdp_sum_kern *obj);

static inline struct xdp_sum_kern *
xdp_sum_kern__open_opts(const struct bpf_object_open_opts *opts)
{
	struct xdp_sum_kern *obj;
	int err;

	obj = (struct xdp_sum_kern *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = xdp_sum_kern__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	xdp_sum_kern__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct xdp_sum_kern *
xdp_sum_kern__open(void)
{
	return xdp_sum_kern__open_opts(NULL);
}

static inline int
xdp_sum_kern__load(struct xdp_sum_kern *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct xdp_sum_kern *
xdp_sum_kern__open_and_load(void)
{
	struct xdp_sum_kern *obj;
	int err;

	obj = xdp_sum_kern__open();
	if (!obj)
		return NULL;
	err = xdp_sum_kern__load(obj);
	if (err) {
		xdp_sum_kern__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
xdp_sum_kern__attach(struct xdp_sum_kern *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
xdp_sum_kern__detach(struct xdp_sum_kern *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *xdp_sum_kern__elf_bytes(size_t *sz);

static inline int
xdp_sum_kern__create_skeleton(struct xdp_sum_kern *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "xdp_sum_kern";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "output";
	s->maps[0].map = &obj->maps.output;

	s->maps[1].name = "xdp_sum_.rodata";
	s->maps[1].map = &obj->maps.rodata;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "xdp_sum_func";
	s->progs[0].prog = &obj->progs.xdp_sum_func;
	s->progs[0].link = &obj->links.xdp_sum_func;

	s->data = xdp_sum_kern__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *xdp_sum_kern__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x40\x14\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1c\0\
\x01\0\x85\x10\0\0\xff\xff\xff\xff\xbf\x06\0\0\0\0\0\0\x85\x10\0\0\xff\xff\xff\
\xff\x1f\x60\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x0c\0\
\0\0\xbf\x03\0\0\0\0\0\0\x85\0\0\0\x06\0\0\0\xb7\0\0\0\x02\0\0\0\x95\0\0\0\0\0\
\0\0\x76\x61\x6c\x75\x65\x3a\x20\x25\x6c\x6c\x75\0\x47\x50\x4c\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x17\0\0\0\x05\0\x08\0\x01\0\
\0\0\x04\0\0\0\x04\x10\x20\x01\x56\x04\x20\x48\x01\x50\0\x01\x11\x01\x25\x25\
\x13\x05\x03\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\x8c\x01\x17\0\
\0\x02\x2e\x01\x11\x1b\x12\x06\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\
\x49\x13\x3f\x19\0\0\x03\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x02\x18\0\0\x04\
\x05\0\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x05\x34\0\x02\x22\x03\x25\x3a\x0b\
\x3b\x0b\x49\x13\0\0\x06\x48\0\x7f\x13\x7d\x1b\0\0\x07\x01\x01\x49\x13\0\0\x08\
\x21\0\x49\x13\x37\x0b\0\0\x09\x26\0\x49\x13\0\0\x0a\x24\0\x03\x25\x3e\x0b\x0b\
\x0b\0\0\x0b\x24\0\x03\x25\x0b\x0b\x3e\x0b\0\0\x0c\x34\0\x03\x25\x49\x13\x3f\
\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x0d\x13\x01\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x0e\
\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x0f\x0f\0\x49\x13\0\0\x10\
\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\0\0\x11\x15\x01\x49\x13\x27\x19\0\0\x12\
\x05\0\x49\x13\0\0\x13\x18\0\0\0\x14\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\
\x15\x04\x01\x49\x13\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x16\x28\0\x03\x25\x1c\
\x0f\0\0\x17\x2e\0\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3c\x19\x3f\x19\0\0\
\x18\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x19\x0d\0\x03\x25\x49\x13\x3a\
\x0b\x3b\x05\x38\x0b\0\0\0\x8f\x01\0\0\x05\0\x01\x08\0\0\0\0\x01\0\x1d\0\x01\
\x08\0\0\0\0\0\0\0\x02\x03\x58\0\0\0\x08\0\0\0\x0c\0\0\0\x02\x03\x58\0\0\0\x01\
\x5a\x1a\0\x17\xd4\0\0\0\x03\x03\x5f\0\0\0\0\x1d\x02\xa1\0\x04\x1c\0\x17\x4a\
\x01\0\0\x05\0\x1b\0\x19\x3e\x01\0\0\x06\x36\x01\0\0\x04\x06\x36\x01\0\0\x05\0\
\x07\x6b\0\0\0\x08\x74\0\0\0\x0c\0\x09\x70\0\0\0\x0a\x04\x06\x01\x0b\x05\x08\
\x07\x0c\x06\x83\0\0\0\0\x21\x02\xa1\x01\x07\x70\0\0\0\x08\x74\0\0\0\x04\0\x0c\
\x07\x9a\0\0\0\0\x14\x02\xa1\x02\x0d\x20\0\x0e\x0e\x08\xc3\0\0\0\0\x10\0\x0e\
\x0a\xc3\0\0\0\0\x11\x08\x0e\x0b\xc3\0\0\0\0\x12\x10\x0e\x0c\xd8\0\0\0\0\x13\
\x18\0\x0f\xc8\0\0\0\x07\xd4\0\0\0\x08\x74\0\0\0\x04\0\x0a\x09\x05\x04\x0f\xdd\
\0\0\0\x07\xd4\0\0\0\x08\x74\0\0\0\x01\0\x10\x0d\xf1\0\0\0\x02\xb1\x0f\xf6\0\0\
\0\x11\x07\x01\0\0\x12\x0b\x01\0\0\x12\x10\x01\0\0\x13\0\x0a\x0e\x05\x08\x0f\
\x6b\0\0\0\x14\x18\x01\0\0\x10\x01\x1b\x0a\x0f\x07\x04\x15\x18\x01\0\0\x16\x04\
\x03\xa8\x18\x16\x11\0\x16\x12\x01\x16\x13\x02\x16\x14\x03\x16\x15\x04\0\x17\
\x17\0\x0a\x3e\x01\0\0\x14\x46\x01\0\0\x19\x01\x1f\x0a\x18\x07\x08\x0f\x4f\x01\
\0\0\x18\x23\x18\x03\xb3\x18\x19\x1d\x10\x01\0\0\x03\xb4\x18\0\x19\x1e\x10\x01\
\0\0\x03\xb5\x18\x04\x19\x1f\x10\x01\0\0\x03\xb6\x18\x08\x19\x20\x10\x01\0\0\
\x03\xb8\x18\x0c\x19\x21\x10\x01\0\0\x03\xb9\x18\x10\x19\x22\x10\x01\0\0\x03\
\xbb\x18\x14\0\0\x94\0\0\0\x05\0\0\0\0\0\0\0\x15\0\0\0\x24\0\0\0\x69\0\0\0\x71\
\0\0\0\x76\0\0\0\x8a\0\0\0\x93\0\0\0\x9a\0\0\0\x9f\0\0\0\xa3\0\0\0\xac\0\0\0\
\xb7\0\0\0\xc3\0\0\0\xd4\0\0\0\xd9\0\0\0\xe6\0\0\0\xec\0\0\0\xf8\0\0\0\x01\x01\
\0\0\x0a\x01\0\0\x11\x01\0\0\x1e\x01\0\0\x29\x01\0\0\x48\x01\0\0\x5b\x01\0\0\
\x61\x01\0\0\x6e\x01\0\0\x72\x01\0\0\x76\x01\0\0\x7b\x01\0\0\x84\x01\0\0\x8e\
\x01\0\0\x9e\x01\0\0\xad\x01\0\0\xbc\x01\0\0\x63\x6c\x61\x6e\x67\x20\x76\x65\
\x72\x73\x69\x6f\x6e\x20\x31\x36\x2e\x30\x2e\x36\0\x78\x64\x70\x5f\x73\x75\x6d\
\x5f\x6b\x65\x72\x6e\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x63\x69\x7a\x7a\x6f\x2f\
\x53\x63\x72\x69\x76\x61\x6e\x69\x61\x2f\x65\x42\x50\x46\x2f\x65\x62\x70\x66\
\x2d\x70\x65\x72\x66\x2d\x61\x6e\x61\x6c\x79\x74\x69\x63\x73\x2f\x65\x62\x70\
\x66\x2d\x70\x72\x6f\x67\x72\x61\x6d\x73\x2f\x78\x64\x70\x2d\x73\x75\x6d\0\x5f\
\x5f\x5f\x5f\x66\x6d\x74\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\
\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\
\0\x6f\x75\x74\x70\x75\x74\0\x74\x79\x70\x65\0\x69\x6e\x74\0\x6b\x65\x79\x5f\
\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x6d\x61\x78\x5f\
\x65\x6e\x74\x72\x69\x65\x73\0\x62\x70\x66\x5f\x74\x72\x61\x63\x65\x5f\x70\x72\
\x69\x6e\x74\x6b\0\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\
\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x58\x44\x50\x5f\x41\x42\x4f\x52\x54\x45\x44\0\
\x58\x44\x50\x5f\x44\x52\x4f\x50\0\x58\x44\x50\x5f\x50\x41\x53\x53\0\x58\x44\
\x50\x5f\x54\x58\0\x58\x44\x50\x5f\x52\x45\x44\x49\x52\x45\x43\x54\0\x78\x64\
\x70\x5f\x61\x63\x74\x69\x6f\x6e\0\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\x72\x66\
\x5f\x72\x65\x61\x64\x5f\x72\x64\x70\x6d\x63\x5f\x5f\x63\x79\x63\x6c\x65\x73\0\
\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\
\x5f\x75\x36\x34\0\x78\x64\x70\x5f\x73\x75\x6d\x5f\x66\x75\x6e\x63\0\x72\x65\
\x74\0\x63\x74\x78\0\x64\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\
\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\
\x6e\x64\x65\x78\0\x72\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\
\x65\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x78\x64\x70\x5f\x6d\
\x64\0\x34\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\
\0\0\0\0\x50\x02\0\0\x50\x02\0\0\x1d\x02\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\
\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\
\0\0\x04\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x06\0\
\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\
\x04\x20\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x01\0\0\0\x40\0\0\0\x27\0\
\0\0\x01\0\0\0\x80\0\0\0\x32\0\0\0\x05\0\0\0\xc0\0\0\0\x3e\0\0\0\0\0\0\x0e\x07\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x0a\0\0\0\x45\0\0\0\x06\0\0\x04\x18\0\0\0\
\x4c\0\0\0\x0b\0\0\0\0\0\0\0\x51\0\0\0\x0b\0\0\0\x20\0\0\0\x5a\0\0\0\x0b\0\0\0\
\x40\0\0\0\x64\0\0\0\x0b\0\0\0\x60\0\0\0\x74\0\0\0\x0b\0\0\0\x80\0\0\0\x83\0\0\
\0\x0b\0\0\0\xa0\0\0\0\x92\0\0\0\0\0\0\x08\x0c\0\0\0\x98\0\0\0\0\0\0\x01\x04\0\
\0\0\x20\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xa5\0\0\0\x09\0\0\0\xa9\0\0\0\x01\
\0\0\x0c\x0d\0\0\0\0\0\0\0\0\0\0\x0d\x10\0\0\0\xa5\x01\0\0\0\0\0\x08\x11\0\0\0\
\xab\x01\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\xbe\x01\0\0\x02\0\0\x0c\x0f\0\0\0\0\
\0\0\0\0\0\0\x0a\x14\0\0\0\xdd\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\
\0\0\0\x03\0\0\0\0\x13\0\0\0\x04\0\0\0\x0c\0\0\0\xe2\x01\0\0\0\0\0\x0e\x15\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x14\0\0\0\x04\0\0\0\x04\0\0\0\xf7\x01\0\0\
\0\0\0\x0e\x17\0\0\0\x01\0\0\0\0\x02\0\0\x01\0\0\x0f\0\0\0\0\x12\0\0\0\0\0\0\0\
\0\0\0\0\x07\x02\0\0\x01\0\0\x0f\0\0\0\0\x08\0\0\0\0\0\0\0\x20\0\0\0\x0d\x02\0\
\0\x01\0\0\x0f\0\0\0\0\x16\0\0\0\0\0\0\0\x0c\0\0\0\x15\x02\0\0\x01\0\0\x0f\0\0\
\0\0\x18\0\0\0\0\0\0\0\x04\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\
\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6b\x65\
\x79\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x6d\x61\
\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6f\x75\x74\x70\x75\x74\0\x78\x64\x70\
\x5f\x6d\x64\0\x64\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\x61\x74\
\x61\x5f\x6d\x65\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\
\x65\x78\0\x72\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\x65\x67\
\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x5f\x5f\x75\x33\x32\0\x75\
\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x63\x74\x78\0\x78\x64\x70\x5f\
\x73\x75\x6d\x5f\x66\x75\x6e\x63\0\x78\x64\x70\0\x2f\x68\x6f\x6d\x65\x2f\x63\
\x69\x7a\x7a\x6f\x2f\x53\x63\x72\x69\x76\x61\x6e\x69\x61\x2f\x65\x42\x50\x46\
\x2f\x65\x62\x70\x66\x2d\x70\x65\x72\x66\x2d\x61\x6e\x61\x6c\x79\x74\x69\x63\
\x73\x2f\x65\x62\x70\x66\x2d\x70\x72\x6f\x67\x72\x61\x6d\x73\x2f\x78\x64\x70\
\x2d\x73\x75\x6d\x2f\x78\x64\x70\x5f\x73\x75\x6d\x5f\x6b\x65\x72\x6e\x2e\x63\0\
\x20\x20\x20\x20\x72\x65\x74\x20\x3d\x20\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\
\x72\x66\x5f\x72\x65\x61\x64\x5f\x72\x64\x70\x6d\x63\x5f\x5f\x63\x79\x63\x6c\
\x65\x73\x28\x29\x3b\0\x20\x20\x20\x20\x72\x65\x74\x20\x3d\x20\x62\x70\x66\x5f\
\x6d\x79\x6b\x70\x65\x72\x66\x5f\x72\x65\x61\x64\x5f\x72\x64\x70\x6d\x63\x5f\
\x5f\x63\x79\x63\x6c\x65\x73\x28\x29\x20\x2d\x20\x72\x65\x74\x3b\0\x20\x20\x20\
\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x76\x61\x6c\x75\x65\x3a\
\x20\x25\x6c\x6c\x75\x22\x2c\x20\x72\x65\x74\x29\x3b\0\x20\x20\x20\x20\x72\x65\
\x74\x75\x72\x6e\x20\x58\x44\x50\x5f\x50\x41\x53\x53\x3b\0\x5f\x5f\x75\x36\x34\
\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\
\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\x72\x66\x5f\x72\x65\x61\x64\x5f\x72\x64\
\x70\x6d\x63\x5f\x5f\x63\x79\x63\x6c\x65\x73\0\x63\x68\x61\x72\0\x78\x64\x70\
\x5f\x73\x75\x6d\x5f\x66\x75\x6e\x63\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x5f\x6c\
\x69\x63\x65\x6e\x73\x65\0\x2e\x6b\x73\x79\x6d\x73\0\x2e\x6d\x61\x70\x73\0\x2e\
\x72\x6f\x64\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\0\0\x9f\xeb\x01\0\
\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\x5c\0\0\0\x70\0\0\0\0\0\0\0\x08\0\0\0\
\xb6\0\0\0\x01\0\0\0\0\0\0\0\x0e\0\0\0\x10\0\0\0\xb6\0\0\0\x05\0\0\0\0\0\0\0\
\xba\0\0\0\x0e\x01\0\0\x0b\x68\0\0\x10\0\0\0\xba\0\0\0\x3a\x01\0\0\x0b\x70\0\0\
\x18\0\0\0\xba\0\0\0\x3a\x01\0\0\x2c\x70\0\0\x20\0\0\0\xba\0\0\0\x6c\x01\0\0\
\x05\x74\0\0\x48\0\0\0\xba\0\0\0\x90\x01\0\0\x05\x78\0\0\x0c\0\0\0\xff\xff\xff\
\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\0\0\0\0\0\
\0\0\xad\0\0\0\x05\0\x08\0\x82\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\
\0\0\0\x01\0\0\x01\x01\x01\x1f\x04\0\0\0\0\x45\0\0\0\x5e\0\0\0\x6f\0\0\0\x03\
\x01\x1f\x02\x0f\x05\x1e\x04\x82\0\0\0\0\x97\x55\x31\x0f\x54\x71\xe5\xd7\xd0\
\x90\xe0\x22\xfb\x56\xe9\x7e\x91\0\0\0\x01\xb8\x10\xf2\x70\x73\x3e\x10\x63\x19\
\xb6\x7e\xf5\x12\xc6\x24\x6e\x9c\0\0\0\x02\x09\xcf\xcd\x71\x69\xc2\x4b\xec\x44\
\x8f\x30\x58\x2e\x8c\x6d\xb9\xae\0\0\0\x03\x59\x15\xea\xc3\xbf\x7f\x25\x49\x8b\
\x16\x4b\x75\x5f\x1a\xe9\xb7\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x17\x01\x05\
\x0b\x0a\x14\x30\x05\x2c\x06\x20\x05\x05\x06\x21\x59\x02\x02\0\x01\x01\x2f\x68\
\x6f\x6d\x65\x2f\x63\x69\x7a\x7a\x6f\x2f\x53\x63\x72\x69\x76\x61\x6e\x69\x61\
\x2f\x65\x42\x50\x46\x2f\x65\x62\x70\x66\x2d\x70\x65\x72\x66\x2d\x61\x6e\x61\
\x6c\x79\x74\x69\x63\x73\x2f\x65\x62\x70\x66\x2d\x70\x72\x6f\x67\x72\x61\x6d\
\x73\x2f\x78\x64\x70\x2d\x73\x75\x6d\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\
\x64\x65\x2f\x61\x73\x6d\x2d\x67\x65\x6e\x65\x72\x69\x63\0\x2f\x75\x73\x72\x2f\
\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\
\x6c\x75\x64\x65\x2f\x6c\x69\x6e\x75\x78\0\x78\x64\x70\x5f\x73\x75\x6d\x5f\x6b\
\x65\x72\x6e\x2e\x63\0\x69\x6e\x74\x2d\x6c\x6c\x36\x34\x2e\x68\0\x62\x70\x66\
\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\0\x62\x70\x66\x2e\x68\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x12\x01\0\0\x04\0\xf1\
\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x29\0\0\0\x01\0\x05\0\0\0\0\0\0\0\0\0\x0c\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x17\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\x01\0\0\
\x12\0\x03\0\0\0\0\0\0\0\0\0\x58\0\0\0\0\0\0\0\x6b\0\0\0\x10\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xdb\0\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\
\x22\0\0\0\x11\0\x07\0\0\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0a\0\
\0\0\x0e\0\0\0\x10\0\0\0\0\0\0\0\x0a\0\0\0\x0e\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\
\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\
\x07\0\0\0\x15\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\
\x09\0\0\0\x23\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x0c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x1c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x24\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x34\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x3c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x44\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x4c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x54\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x5c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x64\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x6c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x74\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x7c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x84\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x8c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\
\x08\0\0\0\x94\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x08\0\0\0\0\0\0\0\x02\0\0\0\
\x04\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0f\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\
\x10\0\0\0\x20\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x28\0\0\0\0\0\0\0\x02\0\0\0\
\x02\0\0\0\x30\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x18\x02\0\0\0\0\0\0\x03\0\0\0\
\x0e\0\0\0\x30\x02\0\0\0\0\0\0\x04\0\0\0\x10\0\0\0\x48\x02\0\0\0\0\0\0\x03\0\0\
\0\x04\0\0\0\x60\x02\0\0\0\0\0\0\x04\0\0\0\x0f\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\
\0\x02\0\0\0\x40\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x60\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\
\x02\0\0\0\x80\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\
\x0a\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\x03\0\0\0\
\x0c\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x2a\0\0\0\0\0\0\0\x03\0\0\0\
\x0c\0\0\0\x2e\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x3a\0\0\0\0\0\0\0\x03\0\0\0\
\x0c\0\0\0\x4f\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x64\0\0\0\0\0\0\0\x03\0\0\0\
\x0c\0\0\0\x79\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x93\0\0\0\0\0\0\0\x02\0\0\0\
\x02\0\0\0\x0d\x03\x0f\x10\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\
\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\
\x6f\x75\x74\x70\x75\x74\0\x78\x64\x70\x5f\x73\x75\x6d\x5f\x66\x75\x6e\x63\x2e\
\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\x69\
\x73\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\x5f\x6f\
\x66\x66\x73\x65\x74\x73\0\x2e\x6d\x61\x70\x73\0\x62\x70\x66\x5f\x6d\x79\x6b\
\x70\x65\x72\x66\x5f\x72\x65\x61\x64\x5f\x72\x64\x70\x6d\x63\x5f\x5f\x63\x79\
\x63\x6c\x65\x73\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\
\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\
\x75\x67\x5f\x61\x64\x64\x72\0\x2e\x72\x65\x6c\x78\x64\x70\0\x2e\x72\x65\x6c\
\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\
\x64\x72\x73\x69\x67\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\
\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\
\x67\x5f\x66\x72\x61\x6d\x65\0\x78\x64\x70\x5f\x73\x75\x6d\x5f\x66\x75\x6e\x63\
\0\x78\x64\x70\x5f\x73\x75\x6d\x5f\x6b\x65\x72\x6e\x2e\x63\0\x2e\x73\x74\x72\
\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\x64\x61\x74\x61\0\x2e\
\x72\x65\x6c\x2e\x42\x54\x46\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x21\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xfc\x12\0\0\0\0\0\
\0\x42\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\
\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb9\0\0\0\x01\0\0\0\x06\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x58\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb5\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x88\x0e\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x1b\0\0\0\x03\0\0\0\x08\0\
\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x31\x01\0\0\x01\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x98\0\0\0\0\0\0\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xdc\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa4\0\0\
\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x65\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\0\0\0\0\0\0\0\x20\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3e\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\0\0\0\0\0\0\0\x1b\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\xe3\0\0\0\0\0\0\0\x3d\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc1\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x20\x02\0\0\0\0\0\0\x93\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\xbd\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\x0e\0\
\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1b\0\0\0\x0a\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\x52\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb3\x03\0\0\0\0\0\0\
\x98\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4e\0\0\0\
\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x0f\0\0\0\0\0\0\x40\x02\0\0\0\
\0\0\0\x1b\0\0\0\x0c\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x8a\0\0\0\x01\0\
\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4b\x04\0\0\0\0\0\0\xc3\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xa9\0\0\0\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x0e\x06\0\0\0\0\0\0\x38\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa5\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x48\x11\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\x1b\0\0\0\x0f\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x3d\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x48\x06\0\0\0\0\0\0\x85\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x39\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\
\x11\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1b\0\0\0\x11\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd0\x0a\0\0\0\
\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\
\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\x11\0\0\0\0\0\0\x60\0\0\
\0\0\0\0\0\x1b\0\0\0\x13\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xf8\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\x0b\0\0\0\0\0\0\x28\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf4\0\0\0\x09\0\0\0\x40\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x12\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1b\0\0\0\
\x15\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xe8\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x88\x0b\0\0\0\0\0\0\xb1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe4\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x68\x12\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\x1b\0\0\0\x17\0\0\0\x08\0\0\0\0\0\
\0\0\x10\0\0\0\0\0\0\0\x95\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x39\x0c\0\0\0\0\0\0\xb4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\xcd\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xf8\
\x12\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x1b\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x29\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf0\x0c\0\0\0\0\
\0\0\x98\x01\0\0\0\0\0\0\x01\0\0\0\x0d\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\
\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct xdp_sum_kern *xdp_sum_kern::open(const struct bpf_object_open_opts *opts) { return xdp_sum_kern__open_opts(opts); }
struct xdp_sum_kern *xdp_sum_kern::open_and_load() { return xdp_sum_kern__open_and_load(); }
int xdp_sum_kern::load(struct xdp_sum_kern *skel) { return xdp_sum_kern__load(skel); }
int xdp_sum_kern::attach(struct xdp_sum_kern *skel) { return xdp_sum_kern__attach(skel); }
void xdp_sum_kern::detach(struct xdp_sum_kern *skel) { xdp_sum_kern__detach(skel); }
void xdp_sum_kern::destroy(struct xdp_sum_kern *skel) { xdp_sum_kern__destroy(skel); }
const void *xdp_sum_kern::elf_bytes(size_t *sz) { return xdp_sum_kern__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
xdp_sum_kern__assert(struct xdp_sum_kern *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __XDP_SUM_KERN_SKEL_H__ */

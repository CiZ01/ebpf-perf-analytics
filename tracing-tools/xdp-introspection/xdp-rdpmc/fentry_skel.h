/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __FENTRY_BPF_SKEL_H__
#define __FENTRY_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct fentry_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *my_value_fentry_readings;
		struct bpf_map *my_accum_readings;
		struct bpf_map *counts;
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *fentry_XXX;
		struct bpf_program *fexit_XXX;
	} progs;
	struct {
		struct bpf_link *fentry_XXX;
		struct bpf_link *fexit_XXX;
	} links;
	struct fentry_bpf__rodata {
		__u32 num_cpu;
		__u32 num_metric;
	} *rodata;

#ifdef __cplusplus
	static inline struct fentry_bpf *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct fentry_bpf *open_and_load();
	static inline int load(struct fentry_bpf *skel);
	static inline int attach(struct fentry_bpf *skel);
	static inline void detach(struct fentry_bpf *skel);
	static inline void destroy(struct fentry_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
fentry_bpf__destroy(struct fentry_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
fentry_bpf__create_skeleton(struct fentry_bpf *obj);

static inline struct fentry_bpf *
fentry_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct fentry_bpf *obj;
	int err;

	obj = (struct fentry_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = fentry_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	fentry_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct fentry_bpf *
fentry_bpf__open(void)
{
	return fentry_bpf__open_opts(NULL);
}

static inline int
fentry_bpf__load(struct fentry_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct fentry_bpf *
fentry_bpf__open_and_load(void)
{
	struct fentry_bpf *obj;
	int err;

	obj = fentry_bpf__open();
	if (!obj)
		return NULL;
	err = fentry_bpf__load(obj);
	if (err) {
		fentry_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
fentry_bpf__attach(struct fentry_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
fentry_bpf__detach(struct fentry_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *fentry_bpf__elf_bytes(size_t *sz);

static inline int
fentry_bpf__create_skeleton(struct fentry_bpf *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "fentry_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 4;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "my_value_fentry_readings";
	s->maps[0].map = &obj->maps.my_value_fentry_readings;

	s->maps[1].name = "my_accum_readings";
	s->maps[1].map = &obj->maps.my_accum_readings;

	s->maps[2].name = "counts";
	s->maps[2].map = &obj->maps.counts;

	s->maps[3].name = "fentry_b.rodata";
	s->maps[3].map = &obj->maps.rodata;
	s->maps[3].mmaped = (void **)&obj->rodata;

	/* programs */
	s->prog_cnt = 2;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "fentry_XXX";
	s->progs[0].prog = &obj->progs.fentry_XXX;
	s->progs[0].link = &obj->links.fentry_XXX;

	s->progs[1].name = "fexit_XXX";
	s->progs[1].prog = &obj->progs.fexit_XXX;
	s->progs[1].link = &obj->links.fexit_XXX;

	s->data = fentry_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *fentry_bpf__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xb0\x20\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1f\0\
\x01\0\xb7\x01\0\0\0\0\0\0\x63\x1a\xfc\xff\0\0\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\
\0\0\xfc\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x01\0\0\0\
\xbf\x06\0\0\0\0\0\0\x15\x06\x03\0\0\0\0\0\xb7\x01\0\0\0\0\0\0\x85\x10\0\0\xff\
\xff\xff\xff\x7b\x06\0\0\0\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\xb7\x07\0\
\0\0\0\0\0\x63\x7a\xf8\xff\0\0\0\0\xb7\x01\0\0\0\0\0\0\x85\x10\0\0\xff\xff\xff\
\xff\xbf\x06\0\0\0\0\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\0\0\xf8\xff\xff\xff\x18\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x01\0\0\0\x15\0\x15\0\0\0\0\0\x79\
\x01\0\0\0\0\0\0\x07\x01\0\0\x01\0\0\0\x7b\x10\0\0\0\0\0\0\x63\x7a\xfc\xff\0\0\
\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\0\0\xfc\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x85\0\0\0\x01\0\0\0\x15\0\x0b\0\0\0\0\0\x79\x07\0\0\0\0\0\0\xbf\xa2\
\0\0\0\0\0\0\x07\x02\0\0\xfc\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x85\0\0\0\x01\0\0\0\x15\0\x04\0\0\0\0\0\x1f\x76\0\0\0\0\0\0\x79\x01\0\0\0\0\0\
\0\x0f\x16\0\0\0\0\0\0\x7b\x60\0\0\0\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\
\x01\0\0\0\x01\0\0\0\x44\x75\x61\x6c\x20\x42\x53\x44\x2f\x47\x50\x4c\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x9f\0\0\0\x05\0\x08\0\x09\0\0\0\x24\0\0\0\x33\0\0\0\x3b\0\0\
\0\x4b\0\0\0\x54\0\0\0\x5d\0\0\0\x6d\0\0\0\x77\0\0\0\x8d\0\0\0\x01\x06\x04\x08\
\x10\x02\x30\x9f\x04\x10\x60\x02\x7a\x04\0\x01\x06\x04\x40\x60\x01\x56\0\x01\
\x08\x04\x08\x28\x02\x30\x9f\x04\x28\x80\x02\x02\x7a\0\0\x01\x08\x04\x28\xe8\
\x01\x01\x56\0\x01\x08\x04\x50\xa0\x01\x01\x50\0\x01\x08\x04\x70\x78\x02\x30\
\x9f\x04\x78\x80\x02\x02\x7a\x04\0\x01\x08\x04\xa0\x01\xd8\x01\x01\x50\0\x01\
\x08\x04\xb0\x01\xe8\x01\x06\x76\0\x77\0\x1c\x9f\x04\xe8\x01\xf8\x01\x01\x56\0\
\x01\x08\x04\xd8\x01\x80\x02\x01\x50\0\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\
\x17\x10\x17\x1b\x25\x11\x01\x55\x23\x73\x17\x74\x17\x8c\x01\x17\0\0\x02\x34\0\
\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x26\0\x49\x13\0\0\x04\
\x35\0\x49\x13\0\0\x05\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x06\x24\0\x03\
\x25\x3e\x0b\x0b\x0b\0\0\x07\x01\x01\x49\x13\0\0\x08\x21\0\x49\x13\x37\x0b\0\0\
\x09\x24\0\x03\x25\x0b\x0b\x3e\x0b\0\0\x0a\x13\x01\x0b\x0b\x3a\x0b\x3b\x0b\0\0\
\x0b\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x0c\x0f\0\x49\x13\0\0\
\x0d\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\0\0\x0e\x15\x01\x49\x13\x27\x19\0\0\
\x0f\x05\0\x49\x13\0\0\x10\x0f\0\0\0\x11\x26\0\0\0\x12\x2e\x01\x03\x25\x3a\x0b\
\x3b\x0b\x27\x19\x49\x13\x20\x21\x01\0\0\x13\x05\0\x03\x25\x3a\x0b\x3b\x0b\x49\
\x13\0\0\x14\x34\0\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x15\x13\x01\x03\x25\x0b\
\x0b\x3a\x0b\x3b\x0b\0\0\x16\x2e\x01\x11\x1b\x12\x06\x40\x18\x7a\x19\x03\x25\
\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x17\x1d\x01\x31\x13\x55\x23\x58\
\x0b\x59\x0b\x57\x0b\0\0\x18\x34\0\x02\x22\x31\x13\0\0\x19\x48\0\x7f\x13\x7d\
\x1b\0\0\x1a\x2e\x01\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3c\x19\x3f\x19\0\
\0\x1b\x2e\x01\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x20\x21\x01\0\0\x1c\x0b\x01\0\0\
\x1d\x0b\x01\x11\x1b\x12\x06\0\0\0\xde\x02\0\0\x05\0\x01\x08\0\0\0\0\x01\0\x1d\
\0\x01\x08\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\x03\x08\0\0\0\x0c\0\0\0\x0c\0\0\0\
\x02\x03\x3a\0\0\0\0\x2a\x02\xa1\0\x03\x3f\0\0\0\x04\x44\0\0\0\x05\x4c\0\0\0\
\x05\x01\x1b\x06\x04\x07\x04\x02\x06\x3a\0\0\0\0\x2b\x02\xa1\x01\x02\x07\x66\0\
\0\0\0\x72\x02\xa1\x02\x07\x72\0\0\0\x08\x76\0\0\0\x0d\0\x06\x08\x06\x01\x09\
\x09\x08\x07\x02\x0a\x85\0\0\0\0\x18\x02\xa1\x03\x0a\x20\0\x12\x0b\x0b\xae\0\0\
\0\0\x14\0\x0b\x0d\xc3\0\0\0\0\x15\x08\x0b\x0e\xd4\0\0\0\0\x16\x10\x0b\x0f\xe5\
\0\0\0\0\x17\x18\0\x0c\xb3\0\0\0\x07\xbf\0\0\0\x08\x76\0\0\0\x06\0\x06\x0c\x05\
\x04\x0c\xc8\0\0\0\x07\xbf\0\0\0\x08\x76\0\0\0\x04\0\x0c\xd9\0\0\0\x07\xbf\0\0\
\0\x08\x76\0\0\0\x08\0\x0c\xea\0\0\0\x07\xbf\0\0\0\x08\x76\0\0\0\x01\0\x02\x10\
\x01\x01\0\0\0\x20\x02\xa1\x04\x0a\x20\0\x1a\x0b\x0b\xae\0\0\0\0\x1c\0\x0b\x0d\
\xc3\0\0\0\0\x1d\x08\x0b\x0e\xd4\0\0\0\0\x1e\x10\x0b\x0f\xe5\0\0\0\0\x1f\x18\0\
\x02\x11\x35\x01\0\0\0\x28\x02\xa1\x05\x0a\x18\0\x23\x0b\x0b\xae\0\0\0\0\x25\0\
\x0b\x0d\xc3\0\0\0\0\x26\x08\x0b\x0e\xd4\0\0\0\0\x27\x10\0\x0d\x12\x5d\x01\0\0\
\x02\x38\x0c\x62\x01\0\0\x0e\x72\x01\0\0\x0f\x72\x01\0\0\x0f\x73\x01\0\0\0\x10\
\x0c\x78\x01\0\0\x11\x12\x13\0\x2e\xbf\0\0\0\x13\x14\0\x2e\xa2\x01\0\0\x14\x16\
\0\x30\x44\0\0\0\x14\x17\0\x34\xab\x01\0\0\x14\x1b\0\x31\xc7\x01\0\0\0\x0c\xa7\
\x01\0\0\x06\x15\x07\x08\x0c\xb0\x01\0\0\x15\x1a\x08\0\x0c\x0b\x18\xbf\x01\0\0\
\0\x0e\0\0\x05\xa7\x01\0\0\x19\x01\x1f\x06\x1c\x05\x08\x16\x06\x70\0\0\0\x01\
\x5a\x28\0\x2e\xbf\0\0\0\x13\x14\0\x2e\xa2\x01\0\0\x17\x79\x01\0\0\0\0\x2e\x05\
\x18\0\x89\x01\0\0\x18\x01\x91\x01\0\0\0\x19\xff\x01\0\0\x07\0\x1a\x1d\0\x0a\
\xbf\x01\0\0\x0f\x0d\x02\0\0\0\x05\x15\x02\0\0\x1f\x01\x15\x06\x1e\x08\x01\x12\
\x20\0\x5a\xbf\0\0\0\x13\x14\0\x5a\xa2\x01\0\0\x14\x16\0\x5e\x44\0\0\0\x14\x21\
\0\x62\xb0\x01\0\0\x14\x22\0\x60\x4a\x02\0\0\x14\x1b\0\x5d\xbf\0\0\0\0\x0c\xbf\
\x01\0\0\x1b\x23\0\x41\x13\x24\0\x41\xab\x01\0\0\x14\x16\0\x43\x44\0\0\0\x14\
\x25\0\x46\xab\x01\0\0\x14\x26\0\x46\xb0\x01\0\0\x1c\x14\x27\0\x4b\xab\x01\0\0\
\0\0\x16\x08\x10\x01\0\0\x01\x5a\x29\0\x5a\xbf\0\0\0\x13\x14\0\x5a\xa2\x01\0\0\
\x17\x19\x02\0\0\x01\0\x5a\x05\x18\x02\x29\x02\0\0\x18\x03\x31\x02\0\0\x18\x04\
\x39\x02\0\0\x17\x4f\x02\0\0\x02\0\x6c\x09\x18\x05\x5b\x02\0\0\x18\x06\x63\x02\
\0\0\x18\x07\x6b\x02\0\0\x1d\x09\x58\0\0\0\x18\x08\x74\x02\0\0\0\0\0\x19\xff\
\x01\0\0\x0a\0\0\x3f\0\0\0\x05\0\x08\0\x04\0\0\0\x10\0\0\0\x19\0\0\0\x23\0\0\0\
\x2f\0\0\0\x01\x06\x04\x08\x18\x04\x20\x60\0\x01\x08\x04\x08\x30\x04\x38\x80\
\x02\0\x01\x08\x04\x70\x80\x01\x04\x88\x01\x80\x02\0\x03\x06\x70\x03\x08\x90\
\x02\0\xac\0\0\0\x05\0\0\0\0\0\0\0\x15\0\0\0\x22\0\0\0\x7b\0\0\0\x83\0\0\0\x90\
\0\0\0\x96\0\0\0\xa1\0\0\0\xa9\0\0\0\xae\0\0\0\xc2\0\0\0\xdb\0\0\0\xe0\0\0\0\
\xe4\0\0\0\xed\0\0\0\xf8\0\0\0\x04\x01\0\0\x16\x01\0\0\x1d\x01\0\0\x31\x01\0\0\
\x40\x01\0\0\x44\x01\0\0\x57\x01\0\0\x5c\x01\0\0\x69\x01\0\0\x6f\x01\0\0\x75\
\x01\0\0\x83\x01\0\0\x87\x01\0\0\x8c\x01\0\0\xa3\x01\0\0\xb1\x01\0\0\xb6\x01\0\
\0\xc4\x01\0\0\xcf\x01\0\0\xd5\x01\0\0\xe7\x01\0\0\xf0\x01\0\0\xfa\x01\0\0\x02\
\x02\0\0\x0b\x02\0\0\x16\x02\0\0\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\
\x6f\x6e\x20\x31\x36\x2e\x30\x2e\x36\0\x66\x65\x6e\x74\x72\x79\x2e\x62\x70\x66\
\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x63\x69\x7a\x7a\x6f\x2f\x53\x63\x72\x69\x76\
\x61\x6e\x69\x61\x2f\x65\x42\x50\x46\x2f\x65\x62\x70\x66\x2d\x70\x65\x72\x66\
\x2d\x61\x6e\x61\x6c\x79\x74\x69\x63\x73\x2f\x74\x72\x61\x63\x69\x6e\x67\x2d\
\x74\x6f\x6f\x6c\x73\x2f\x78\x64\x70\x2d\x69\x6e\x74\x72\x6f\x73\x70\x65\x63\
\x74\x69\x6f\x6e\x2f\x78\x64\x70\x2d\x72\x64\x70\x6d\x63\0\x6e\x75\x6d\x5f\x63\
\x70\x75\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x75\x33\
\x32\0\x6e\x75\x6d\x5f\x6d\x65\x74\x72\x69\x63\0\x4c\x49\x43\x45\x4e\x53\x45\0\
\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\
\x50\x45\x5f\x5f\0\x6d\x79\x5f\x76\x61\x6c\x75\x65\x5f\x66\x65\x6e\x74\x72\x79\
\x5f\x72\x65\x61\x64\x69\x6e\x67\x73\0\x74\x79\x70\x65\0\x69\x6e\x74\0\x6b\x65\
\x79\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x6d\x61\
\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6d\x79\x5f\x61\x63\x63\x75\x6d\x5f\x72\
\x65\x61\x64\x69\x6e\x67\x73\0\x63\x6f\x75\x6e\x74\x73\0\x62\x70\x66\x5f\x6d\
\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\0\x5f\x5f\x5f\x5f\x66\
\x65\x6e\x74\x72\x79\x5f\x58\x58\x58\0\x63\x74\x78\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x7a\x65\x72\x6f\0\x70\x74\
\x72\x5f\x6d\x79\x5f\x76\x61\x6c\x75\x65\0\x76\x61\x6c\x75\x65\0\x5f\x5f\x75\
\x36\x34\0\x6d\x79\x5f\x76\x61\x6c\x75\x65\x5f\x70\x65\x72\x66\0\x65\x72\x72\0\
\x6c\x6f\x6e\x67\0\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\x72\x66\x5f\x72\x65\x61\
\x64\x5f\x72\x64\x70\x6d\x63\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x63\x68\x61\
\x72\0\x5f\x5f\x75\x38\0\x5f\x5f\x5f\x5f\x66\x65\x78\x69\x74\x5f\x58\x58\x58\0\
\x6d\x79\x5f\x72\x65\x61\x64\x69\x6e\x67\0\x63\x6f\x75\x6e\x74\0\x66\x65\x78\
\x69\x74\x5f\x75\x70\x64\x61\x74\x65\x5f\x6d\x61\x70\x73\0\x6d\x79\x5f\x61\x66\
\x74\x65\x72\0\x6d\x79\x5f\x62\x65\x66\x6f\x72\x65\0\x6d\x79\x5f\x64\x69\x66\
\x66\0\x6d\x79\x5f\x61\x63\x63\x75\x6d\0\x66\x65\x6e\x74\x72\x79\x5f\x58\x58\
\x58\0\x66\x65\x78\x69\x74\x5f\x58\x58\x58\0\x5c\0\0\0\x05\0\x08\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x58\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\0\0\0\0\0\0\0\x20\
\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x3c\x03\0\0\x3c\x03\0\0\x14\
\x04\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\
\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x06\0\0\0\x05\0\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\
\0\0\0\x04\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\x02\x08\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\
\0\x02\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\x02\x0a\0\0\0\0\0\0\0\0\0\0\x03\
\0\0\0\0\x02\0\0\0\x04\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\x04\x20\0\0\0\x19\0\0\0\
\x01\0\0\0\0\0\0\0\x1e\0\0\0\x05\0\0\0\x40\0\0\0\x27\0\0\0\x07\0\0\0\x80\0\0\0\
\x32\0\0\0\x09\0\0\0\xc0\0\0\0\x3e\0\0\0\0\0\0\x0e\x0b\0\0\0\x01\0\0\0\0\0\0\0\
\x04\0\0\x04\x20\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x05\0\0\0\x40\0\0\
\0\x27\0\0\0\x07\0\0\0\x80\0\0\0\x32\0\0\0\x09\0\0\0\xc0\0\0\0\x57\0\0\0\0\0\0\
\x0e\x0d\0\0\0\x01\0\0\0\0\0\0\0\x03\0\0\x04\x18\0\0\0\x19\0\0\0\x01\0\0\0\0\0\
\0\0\x1e\0\0\0\x05\0\0\0\x40\0\0\0\x27\0\0\0\x07\0\0\0\x80\0\0\0\x69\0\0\0\0\0\
\0\x0e\x0f\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x12\0\0\0\x70\0\0\0\0\0\0\x01\x08\
\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\x83\0\0\0\x11\0\0\0\x87\0\0\0\
\x01\0\0\x0c\x13\0\0\0\0\0\0\0\x01\0\0\x0d\x16\0\0\0\0\0\0\0\x17\0\0\0\xc4\x01\
\0\0\0\0\0\x08\x12\0\0\0\xca\x01\0\0\0\0\0\x08\x18\0\0\0\xcf\x01\0\0\0\0\0\x01\
\x01\0\0\0\x08\0\0\0\xdd\x01\0\0\x02\0\0\x0c\x15\0\0\0\0\0\0\0\x01\0\0\x0d\x02\
\0\0\0\x83\0\0\0\x11\0\0\0\xf4\x01\0\0\x01\0\0\x0c\x1a\0\0\0\0\0\0\0\0\0\0\x0a\
\x1d\0\0\0\0\0\0\0\0\0\0\x09\x1e\0\0\0\xc4\x03\0\0\0\0\0\x08\x1f\0\0\0\xca\x03\
\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\xd7\x03\0\0\0\0\0\x0e\x1c\0\0\0\x01\0\0\0\
\xdf\x03\0\0\0\0\0\x0e\x1c\0\0\0\x01\0\0\0\xea\x03\0\0\0\0\0\x01\x01\0\0\0\x08\
\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x22\0\0\0\x04\0\0\0\x0d\0\0\0\xef\x03\0\0\0\
\0\0\x0e\x23\0\0\0\x01\0\0\0\xf7\x03\0\0\x01\0\0\x0f\0\0\0\0\x19\0\0\0\0\0\0\0\
\0\0\0\0\xfe\x03\0\0\x03\0\0\x0f\0\0\0\0\x0c\0\0\0\0\0\0\0\x20\0\0\0\x0e\0\0\0\
\0\0\0\0\x20\0\0\0\x10\0\0\0\0\0\0\0\x18\0\0\0\x04\x04\0\0\x02\0\0\x0f\0\0\0\0\
\x20\0\0\0\0\0\0\0\x04\0\0\0\x21\0\0\0\0\0\0\0\x04\0\0\0\x0c\x04\0\0\x01\0\0\
\x0f\0\0\0\0\x24\0\0\0\0\0\0\0\x0d\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\
\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\
\x6b\x65\x79\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\
\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6d\x79\x5f\x76\x61\x6c\x75\x65\
\x5f\x66\x65\x6e\x74\x72\x79\x5f\x72\x65\x61\x64\x69\x6e\x67\x73\0\x6d\x79\x5f\
\x61\x63\x63\x75\x6d\x5f\x72\x65\x61\x64\x69\x6e\x67\x73\0\x63\x6f\x75\x6e\x74\
\x73\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\
\0\x63\x74\x78\0\x66\x65\x6e\x74\x72\x79\x5f\x58\x58\x58\0\x66\x65\x6e\x74\x72\
\x79\x2f\x2a\0\x2f\x68\x6f\x6d\x65\x2f\x63\x69\x7a\x7a\x6f\x2f\x53\x63\x72\x69\
\x76\x61\x6e\x69\x61\x2f\x65\x42\x50\x46\x2f\x65\x62\x70\x66\x2d\x70\x65\x72\
\x66\x2d\x61\x6e\x61\x6c\x79\x74\x69\x63\x73\x2f\x74\x72\x61\x63\x69\x6e\x67\
\x2d\x74\x6f\x6f\x6c\x73\x2f\x78\x64\x70\x2d\x69\x6e\x74\x72\x6f\x73\x70\x65\
\x63\x74\x69\x6f\x6e\x2f\x78\x64\x70\x2d\x72\x64\x70\x6d\x63\x2f\x66\x65\x6e\
\x74\x72\x79\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x50\x52\
\x4f\x47\x28\x66\x65\x6e\x74\x72\x79\x5f\x58\x58\x58\x29\0\x20\x20\x20\x20\x5f\
\x5f\x75\x33\x32\x20\x7a\x65\x72\x6f\x20\x3d\x20\x30\x3b\0\x20\x20\x20\x20\x70\
\x74\x72\x5f\x6d\x79\x5f\x76\x61\x6c\x75\x65\x20\x3d\x20\x62\x70\x66\x5f\x6d\
\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\x28\x26\x6d\x79\x5f\
\x76\x61\x6c\x75\x65\x5f\x66\x65\x6e\x74\x72\x79\x5f\x72\x65\x61\x64\x69\x6e\
\x67\x73\x2c\x20\x26\x7a\x65\x72\x6f\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\
\x21\x70\x74\x72\x5f\x6d\x79\x5f\x76\x61\x6c\x75\x65\x29\0\x20\x20\x20\x20\x70\
\x74\x72\x5f\x6d\x79\x5f\x76\x61\x6c\x75\x65\x2d\x3e\x76\x61\x6c\x75\x65\x20\
\x3d\x20\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\x72\x66\x5f\x72\x65\x61\x64\x5f\
\x72\x64\x70\x6d\x63\x28\x30\x29\x3b\0\x5f\x5f\x75\x36\x34\0\x5f\x5f\x75\x38\0\
\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x63\x68\x61\x72\0\x62\x70\x66\x5f\x6d\x79\
\x6b\x70\x65\x72\x66\x5f\x72\x65\x61\x64\x5f\x72\x64\x70\x6d\x63\0\x66\x65\x78\
\x69\x74\x5f\x58\x58\x58\0\x66\x65\x78\x69\x74\x2f\x58\x58\x58\0\x69\x6e\x74\
\x20\x42\x50\x46\x5f\x50\x52\x4f\x47\x28\x66\x65\x78\x69\x74\x5f\x58\x58\x58\
\x29\0\x20\x20\x20\x20\x6d\x79\x5f\x72\x65\x61\x64\x69\x6e\x67\x2e\x76\x61\x6c\
\x75\x65\x20\x3d\x20\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\x72\x66\x5f\x72\x65\
\x61\x64\x5f\x72\x64\x70\x6d\x63\x28\x30\x29\x3b\0\x20\x20\x20\x20\x63\x6f\x75\
\x6e\x74\x20\x3d\x20\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\
\x5f\x65\x6c\x65\x6d\x28\x26\x63\x6f\x75\x6e\x74\x73\x2c\x20\x26\x7a\x65\x72\
\x6f\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x63\x6f\x75\x6e\x74\x29\0\x20\
\x20\x20\x20\x20\x20\x20\x20\x2a\x63\x6f\x75\x6e\x74\x20\x2b\x3d\x20\x31\x3b\0\
\x20\x20\x20\x20\x6d\x79\x5f\x62\x65\x66\x6f\x72\x65\x20\x3d\x20\x62\x70\x66\
\x5f\x6d\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\x28\x26\x6d\
\x79\x5f\x76\x61\x6c\x75\x65\x5f\x66\x65\x6e\x74\x72\x79\x5f\x72\x65\x61\x64\
\x69\x6e\x67\x73\x2c\x20\x26\x7a\x65\x72\x6f\x29\x3b\0\x20\x20\x20\x20\x69\x66\
\x20\x28\x6d\x79\x5f\x62\x65\x66\x6f\x72\x65\x29\0\x20\x20\x20\x20\x20\x20\x20\
\x20\x6d\x79\x5f\x64\x69\x66\x66\x2e\x76\x61\x6c\x75\x65\x20\x3d\x20\x6d\x79\
\x5f\x61\x66\x74\x65\x72\x2d\x3e\x76\x61\x6c\x75\x65\x20\x2d\x20\x6d\x79\x5f\
\x62\x65\x66\x6f\x72\x65\x2d\x3e\x76\x61\x6c\x75\x65\x3b\0\x20\x20\x20\x20\x20\
\x20\x20\x20\x6d\x79\x5f\x61\x63\x63\x75\x6d\x20\x3d\x20\x62\x70\x66\x5f\x6d\
\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\x28\x26\x6d\x79\x5f\
\x61\x63\x63\x75\x6d\x5f\x72\x65\x61\x64\x69\x6e\x67\x73\x2c\x20\x26\x7a\x65\
\x72\x6f\x29\x3b\0\x20\x20\x20\x20\x20\x20\x20\x20\x69\x66\x20\x28\x6d\x79\x5f\
\x61\x63\x63\x75\x6d\x29\0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6d\
\x79\x5f\x61\x63\x63\x75\x6d\x2d\x3e\x76\x61\x6c\x75\x65\x20\x2b\x3d\x20\x6d\
\x79\x5f\x64\x69\x66\x66\x2e\x76\x61\x6c\x75\x65\x3b\0\x5f\x5f\x75\x33\x32\0\
\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x6e\x75\x6d\x5f\x63\x70\x75\
\0\x6e\x75\x6d\x5f\x6d\x65\x74\x72\x69\x63\0\x63\x68\x61\x72\0\x4c\x49\x43\x45\
\x4e\x53\x45\0\x2e\x6b\x73\x79\x6d\x73\0\x2e\x6d\x61\x70\x73\0\x2e\x72\x6f\x64\
\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\x65\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\
\x24\0\0\0\x24\0\0\0\xa4\x01\0\0\xc8\x01\0\0\0\0\0\0\x08\0\0\0\x92\0\0\0\x01\0\
\0\0\0\0\0\0\x14\0\0\0\xfe\x01\0\0\x01\0\0\0\0\0\0\0\x1b\0\0\0\x10\0\0\0\x92\0\
\0\0\x08\0\0\0\0\0\0\0\x9b\0\0\0\x01\x01\0\0\0\xb8\0\0\x08\0\0\0\x9b\0\0\0\x1a\
\x01\0\0\x0b\xc0\0\0\x18\0\0\0\x9b\0\0\0\0\0\0\0\0\0\0\0\x20\0\0\0\x9b\0\0\0\
\x2e\x01\0\0\x14\xe0\0\0\x40\0\0\0\x9b\0\0\0\x78\x01\0\0\x09\xe4\0\0\x48\0\0\0\
\x9b\0\0\0\x8f\x01\0\0\x1b\xf0\0\0\x58\0\0\0\x9b\0\0\0\x8f\x01\0\0\x19\xf0\0\0\
\x60\0\0\0\x9b\0\0\0\x01\x01\0\0\x05\xb8\0\0\xfe\x01\0\0\x11\0\0\0\0\0\0\0\x9b\
\0\0\0\x08\x02\0\0\0\x68\x01\0\x08\0\0\0\x9b\0\0\0\x1a\x01\0\0\x0b\x78\x01\0\
\x10\0\0\0\x9b\0\0\0\x20\x02\0\0\x18\x94\x01\0\x30\0\0\0\x9b\0\0\0\0\0\0\0\0\0\
\0\0\x38\0\0\0\x9b\0\0\0\x52\x02\0\0\x0d\xa0\x01\0\x50\0\0\0\x9b\0\0\0\x83\x02\
\0\0\x09\xa4\x01\0\x58\0\0\0\x9b\0\0\0\x92\x02\0\0\x10\xac\x01\0\x70\0\0\0\x9b\
\0\0\0\x1a\x01\0\0\x0b\x0c\x01\0\x80\0\0\0\x9b\0\0\0\x92\x02\0\0\x10\xac\x01\0\
\x88\0\0\0\x9b\0\0\0\xa7\x02\0\0\x11\x20\x01\0\xa0\0\0\0\x9b\0\0\0\xee\x02\0\0\
\x09\x24\x01\0\xa8\0\0\0\x9b\0\0\0\x01\x03\0\0\x36\x34\x01\0\xc0\0\0\0\x9b\0\0\
\0\x3d\x03\0\0\x14\x3c\x01\0\xd8\0\0\0\x9b\0\0\0\x80\x03\0\0\x0d\x40\x01\0\xe0\
\0\0\0\x9b\0\0\0\x01\x03\0\0\x29\x34\x01\0\xe8\0\0\0\x9b\0\0\0\x96\x03\0\0\x1d\
\x48\x01\0\0\x01\0\0\x9b\0\0\0\x08\x02\0\0\x05\x68\x01\0\0\0\0\0\x0c\0\0\0\xff\
\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\0\
\0\0\0\0\0\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\x08\x01\0\0\
\x05\0\x08\0\x69\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\
\x01\x01\x01\x1f\x03\0\0\0\0\x59\0\0\0\x72\0\0\0\x03\x01\x1f\x02\x0f\x05\x1e\
\x03\x83\0\0\0\0\x5a\xd6\x09\xbe\x2b\x2e\x8d\x3f\xeb\x63\x5a\x4e\xdc\x0d\xbb\
\x54\x90\0\0\0\x01\xb8\x10\xf2\x70\x73\x3e\x10\x63\x19\xb6\x7e\xf5\x12\xc6\x24\
\x6e\x9b\0\0\0\x02\x09\xcf\xcd\x71\x69\xc2\x4b\xec\x44\x8f\x30\x58\x2e\x8c\x6d\
\xb9\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x2d\x01\x05\x0b\x0a\x22\x06\x03\x50\
\x20\x05\x14\x06\x03\x38\x2e\x05\x09\x4b\x05\x1b\x23\x05\x19\x06\x2e\x05\x05\
\x06\x03\x72\x20\x02\x02\0\x01\x01\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\xd9\0\
\x01\x05\x0b\x0a\x24\x05\x18\x27\x06\x03\x9b\x7f\x3c\x05\x0d\x06\x03\xe8\0\x2e\
\x05\x09\x3d\x05\x10\x22\x05\x0b\x03\x58\x3c\x06\x03\xbd\x7f\x20\x05\x10\x06\
\x03\xeb\0\x20\x05\x11\x03\x5d\x20\x05\x09\x3d\x05\x36\x24\x06\x03\xb3\x7f\x20\
\x03\xcd\0\x20\x05\x14\x06\x22\x05\x0d\x3d\x05\x29\x1d\x05\x1d\x25\x05\x05\x44\
\x02\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x63\x69\x7a\x7a\x6f\x2f\x53\x63\x72\
\x69\x76\x61\x6e\x69\x61\x2f\x65\x42\x50\x46\x2f\x65\x62\x70\x66\x2d\x70\x65\
\x72\x66\x2d\x61\x6e\x61\x6c\x79\x74\x69\x63\x73\x2f\x74\x72\x61\x63\x69\x6e\
\x67\x2d\x74\x6f\x6f\x6c\x73\x2f\x78\x64\x70\x2d\x69\x6e\x74\x72\x6f\x73\x70\
\x65\x63\x74\x69\x6f\x6e\x2f\x78\x64\x70\x2d\x72\x64\x70\x6d\x63\0\x2f\x75\x73\
\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x61\x73\x6d\x2d\x67\x65\x6e\x65\x72\
\x69\x63\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\
\x66\x65\x6e\x74\x72\x79\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x2d\x6c\x6c\x36\
\x34\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\
\x68\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2d\x01\0\
\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x8d\x01\0\0\0\0\x03\0\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x03\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x86\x01\0\0\0\0\x05\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\x0b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x12\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x03\0\x1a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x1c\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x52\x01\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x70\0\
\0\0\0\0\0\0\x6e\0\0\0\x11\0\x09\0\0\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x0b\x01\0\
\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5d\x01\0\0\x12\0\x05\0\0\0\0\0\0\
\0\0\0\x10\x01\0\0\0\0\0\0\x4a\0\0\0\x11\0\x09\0\x40\0\0\0\0\0\0\0\x18\0\0\0\0\
\0\0\0\x87\0\0\0\x11\0\x09\0\x20\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x0f\0\0\0\x11\
\0\x07\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x22\x01\0\0\x11\0\x07\0\x04\0\0\0\0\
\0\0\0\x04\0\0\0\0\0\0\0\x7e\x01\0\0\x11\0\x08\0\0\0\0\0\0\0\0\0\x0d\0\0\0\0\0\
\0\0\x20\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\x50\0\0\0\0\0\0\0\x0a\0\0\0\x11\0\0\
\0\x18\0\0\0\0\0\0\0\x0a\0\0\0\x11\0\0\0\x38\0\0\0\0\0\0\0\x01\0\0\0\x13\0\0\0\
\x88\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\xc0\0\0\0\0\0\0\0\x01\0\0\0\x14\0\0\0\
\x08\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\
\x15\0\0\0\0\0\0\0\x03\0\0\0\x0d\0\0\0\x23\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x27\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x2b\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\
\x08\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x0c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x10\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x18\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x1c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x20\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x24\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x28\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x30\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x34\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x38\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x3c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x40\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x44\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x48\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x4c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x50\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x54\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x58\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x5c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x60\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x64\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x68\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x6c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x70\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x74\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x78\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x7c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x80\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x84\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x88\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x8c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x90\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x94\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x98\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x9c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\xa0\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\xa4\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\xa8\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\xac\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\
\x08\0\0\0\0\0\0\0\x02\0\0\0\x15\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x16\0\0\0\
\x18\0\0\0\0\0\0\0\x02\0\0\0\x17\0\0\0\x20\0\0\0\0\0\0\0\x02\0\0\0\x10\0\0\0\
\x28\0\0\0\0\0\0\0\x02\0\0\0\x14\0\0\0\x30\0\0\0\0\0\0\0\x02\0\0\0\x13\0\0\0\
\x38\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\
\x48\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\x50\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\
\x58\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\xe0\x02\0\0\0\0\0\0\x03\0\0\0\x11\0\0\0\
\xf8\x02\0\0\0\0\0\0\x04\0\0\0\x10\0\0\0\x04\x03\0\0\0\0\0\0\x04\0\0\0\x14\0\0\
\0\x10\x03\0\0\0\0\0\0\x04\0\0\0\x13\0\0\0\x28\x03\0\0\0\0\0\0\x03\0\0\0\x15\0\
\0\0\x34\x03\0\0\0\0\0\0\x03\0\0\0\x16\0\0\0\x4c\x03\0\0\0\0\0\0\x04\0\0\0\x17\
\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x3c\0\0\0\0\0\0\0\x04\0\0\0\x04\0\
\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\
\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\xd8\0\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\xe8\0\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\
\xf8\0\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\x08\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\
\x18\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\x28\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\
\0\x38\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\x48\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\
\0\0\x58\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\x68\x01\0\0\0\0\0\0\x04\0\0\0\x04\
\0\0\0\x78\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\x88\x01\0\0\0\0\0\0\x04\0\0\0\
\x04\0\0\0\x98\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\xa8\x01\0\0\0\0\0\0\x04\0\0\
\0\x04\0\0\0\xb8\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\xc8\x01\0\0\0\0\0\0\x04\0\
\0\0\x04\0\0\0\xd8\x01\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\x14\0\0\0\0\0\0\0\x03\0\
\0\0\x0c\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\
\0\x0c\0\0\0\x30\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\x22\0\0\0\0\0\0\0\x03\0\0\0\
\x0e\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x2a\0\0\0\0\0\0\0\x03\0\0\0\
\x0e\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x4b\0\0\0\0\0\0\0\x03\0\0\0\
\x0e\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x7a\0\0\0\0\0\0\0\x02\0\0\0\
\x02\0\0\0\xad\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\x0f\x12\x17\x10\x14\x13\0\x2e\
\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\x76\0\x6e\x75\x6d\x5f\x63\x70\x75\
\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x2e\
\x64\x65\x62\x75\x67\x5f\x72\x6e\x67\x6c\x69\x73\x74\x73\0\x2e\x64\x65\x62\x75\
\x67\x5f\x6c\x6f\x63\x6c\x69\x73\x74\x73\0\x63\x6f\x75\x6e\x74\x73\0\x2e\x72\
\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\
\x73\0\x2e\x6d\x61\x70\x73\0\x6d\x79\x5f\x76\x61\x6c\x75\x65\x5f\x66\x65\x6e\
\x74\x72\x79\x5f\x72\x65\x61\x64\x69\x6e\x67\x73\0\x6d\x79\x5f\x61\x63\x63\x75\
\x6d\x5f\x72\x65\x61\x64\x69\x6e\x67\x73\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\
\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\
\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\x64\x72\0\x2e\x72\x65\x6c\x2e\x64\
\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\
\x73\x69\x67\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\
\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\
\x72\x61\x6d\x65\0\x62\x70\x66\x5f\x6d\x79\x6b\x70\x65\x72\x66\x5f\x72\x65\x61\
\x64\x5f\x72\x64\x70\x6d\x63\0\x6e\x75\x6d\x5f\x6d\x65\x74\x72\x69\x63\0\x66\
\x65\x6e\x74\x72\x79\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\x72\x74\x61\x62\0\
\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\x64\x61\x74\x61\0\x66\x65\x6e\x74\
\x72\x79\x5f\x58\x58\x58\0\x66\x65\x78\x69\x74\x5f\x58\x58\x58\0\x2e\x72\x65\
\x6c\x66\x65\x78\x69\x74\x2f\x58\x58\x58\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\
\x4c\x49\x43\x45\x4e\x53\x45\0\x4c\x42\x42\x31\x5f\x34\0\x4c\x42\x42\x30\x5f\
\x32\0\x2e\x72\x65\x6c\x66\x65\x6e\x74\x72\x79\x2f\x2a\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3a\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x0e\x1f\0\0\0\0\0\0\xa1\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x17\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x98\x01\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x70\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x94\x01\0\0\
\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x18\0\0\0\0\0\0\x20\0\0\0\0\0\
\0\0\x1e\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x6b\x01\0\0\x01\0\
\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x67\x01\0\0\x09\0\0\0\x40\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x18\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1e\0\0\0\x05\
\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x4a\x01\0\0\x01\0\0\0\x02\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xc0\x01\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe2\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xc8\x01\0\0\0\0\0\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x68\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\x01\
\0\0\0\0\0\0\x58\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x3a\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x02\0\0\0\0\0\0\xa3\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd3\x02\0\0\0\0\0\0\x5b\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x2e\x04\0\0\0\0\0\0\xe2\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc4\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x78\x18\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\x1e\0\0\0\x0c\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x2a\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x10\x07\0\0\0\0\0\0\x43\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x55\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x53\x07\0\0\0\
\0\0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x51\
\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\x18\0\0\0\0\0\0\xa0\x02\
\0\0\0\0\0\0\x1e\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x99\0\0\0\
\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x08\0\0\0\0\0\0\x20\x02\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xb8\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x23\x0a\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x78\x1b\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\x1e\0\0\0\x12\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x79\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x84\x0a\0\0\0\0\0\0\x68\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x75\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x28\x1c\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\x1e\0\0\0\x14\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\x21\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xec\x11\
\0\0\0\0\0\0\xe8\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x1d\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x1c\0\0\0\0\0\0\
\xb0\x01\0\0\0\0\0\0\x1e\0\0\0\x16\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\
\xfe\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\x13\0\0\0\0\0\0\x40\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xfa\0\0\0\x09\0\
\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x1e\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\
\x1e\0\0\0\x18\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xee\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x14\0\0\0\0\0\0\x0c\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xea\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x88\x1e\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x1e\0\0\0\x1a\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xa4\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x24\x15\0\0\0\0\0\0\xad\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\x01\0\0\0\0\0\0\0\xd4\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\
\0\0\0\x08\x1f\0\0\0\0\0\0\x06\0\0\0\0\0\0\0\x1e\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x42\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\
\x15\0\0\0\0\0\0\x40\x02\0\0\0\0\0\0\x01\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x18\
\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct fentry_bpf *fentry_bpf::open(const struct bpf_object_open_opts *opts) { return fentry_bpf__open_opts(opts); }
struct fentry_bpf *fentry_bpf::open_and_load() { return fentry_bpf__open_and_load(); }
int fentry_bpf::load(struct fentry_bpf *skel) { return fentry_bpf__load(skel); }
int fentry_bpf::attach(struct fentry_bpf *skel) { return fentry_bpf__attach(skel); }
void fentry_bpf::detach(struct fentry_bpf *skel) { fentry_bpf__detach(skel); }
void fentry_bpf::destroy(struct fentry_bpf *skel) { fentry_bpf__destroy(skel); }
const void *fentry_bpf::elf_bytes(size_t *sz) { return fentry_bpf__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
fentry_bpf__assert(struct fentry_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
	_Static_assert(sizeof(s->rodata->num_cpu) == 4, "unexpected size of 'num_cpu'");
	_Static_assert(sizeof(s->rodata->num_metric) == 4, "unexpected size of 'num_metric'");
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __FENTRY_BPF_SKEL_H__ */
